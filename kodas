#include <iomanip>
#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>

using std::cout;
using std::endl;
using std::left;
using std::right;
using std::string;
using std::vector;
using std::cin;
using std::setw;
using std::setprecision;
using std::fixed;
using std::sort;

struct Studentas
{
    string var;
    string pav;
    vector <int> paz;
    int egz;
    float gal;
    float med;
};

double Mediana(const Studentas& s){
    vector <int> visi;
    visi = s.paz;
    visi.push_back(s.egz);
    sort(visi.begin(), visi.end());
    if(visi.size() % 2 != 0){
        return visi[visi.size()/2];
    }
    else{
        return (float(visi[visi.size()/2]) + visi[(visi.size()/2) - 1]) / 2;
    }
}

bool paz_tikrinimas(int laik_paz){
    if(cin.fail()){ //naudojamas patikrinti ar inputas teisingas
        cin.clear();
        cin.ignore(1000, '\n');
        cout << "Ivedete ne skaiciu. Iveskite skaiciu." << endl;
        return  false;
    }
    if(laik_paz > 0 && laik_paz <= 10){
        return true;
    }
    else{
        cout << "Netinkamas skaicius. Pabandykite dar karta." << endl;
        return false;
    }
}

Studentas Stud_iv()
{
    int m, laik_paz, suma = 0;
    Studentas Pirmas;
    cout << "Ivesti studento duomenis " << endl;
    cout << "Vardas: "; cin >> Pirmas.var;
    cout << "Pavarde: "; cin >> Pirmas.pav;
    //cout << "Kiek pazymiu turi " << Pirmas.var << " " << Pirmas.pav << ": "; cin >> m;
    bool yra = true;
    string ats;
    int k = 1;
    while(yra){
        if(k == 1){
            bool tinkamas = false;
            while(!tinkamas) {
                cout << "Iveskite " << k << " pazymi:"; 
                cin >> laik_paz;
                if(paz_tikrinimas(laik_paz) == true){
                    Pirmas.paz.push_back(laik_paz);
                    suma += laik_paz;
                    tinkamas = true;
                    k+=1;
                }else{
                    continue;
                }
            }
        }
        else{
            cout << "Ar " << Pirmas.var << " dar turi pazymiu (T arba N)?" << endl; cin >> ats;
            if(ats == "T"){
                bool tinkamas = false;
                while(!tinkamas) {
                    cout << "Iveskite " << k << " pazymi:"; 
                    cin >> laik_paz;
                    if(paz_tikrinimas(laik_paz) == true){
                        Pirmas.paz.push_back(laik_paz);
                        suma += laik_paz;
                        tinkamas = true;
                        k+=1;
                    }else{
                        continue;
                    }
                Pirmas.paz.push_back(laik_paz);
                suma += laik_paz;
                }
            }
            else{
                yra = false;
            }
        }
    }
    bool tinkamas = false;
    int egz;
    while(!tinkamas){
        cout << "Koks egzamino razultatas :"; cin >> egz;
        if(paz_tikrinimas(egz) == true){
            Pirmas.egz = egz;
            Pirmas.gal = double(suma) / double(m) * 0.4 + 0.6 * Pirmas.egz;
            Pirmas.med = double(Mediana(Pirmas)) * 0.4 + 0.6 * Pirmas.egz;
            tinkamas = true;
        }
        else{
            continue;
        }
    }
    return Pirmas;
}



int main()
{
    vector<Studentas> Grupe;
    cout << "Kiek studentu yra grupeje? ";
    int n;
    cin >> n;
    Studentas past;
    for(auto z = 0; z < n; z++)
    {
        Grupe.push_back(Stud_iv());
    }
    bool tinkamas = false;
    string pasirinkimas;

    while (!tinkamas){
        cout << "Ar noretumete gauti tik vidurki (V), tik mediana (M) ar abu (A)? "; cin >> pasirinkimas;
        if(pasirinkimas == "V"){
            cout << setw(15) << left << "Pavarde " << setw(15) << left << "Vardas " << setw(15) << left << "Galutinis (Vid.)" << endl;
            cout << "--------------------------------------------------" <<endl;
            for(auto& past : Grupe)
            {   
            cout << setw(15) << left << past.pav << " | " << setw(10) << left << past.var << " | " ;
            cout << setw(10) << fixed << setprecision(2) << past.gal << endl;
            }
            tinkamas = true;
        }
        else if (pasirinkimas == "M"){
            cout << setw(15) << left << "Pavarde " << setw(10) << left << "Vardas " << setw(15) << left << "Galutinis (Med.)" << endl;
            cout << "-------------------------------------------------" <<endl;
            for(auto& past : Grupe)
            {   
                cout << setw(15) << left << past.pav << " | " << setw(10) << left << past.var << " | " ;
                cout << setw(10) << fixed << setprecision(2) << past.med << endl;
            }
            tinkamas = true;
        }
        else if (pasirinkimas == "A"){
            cout << setw(15) << left << "Pavarde " << setw(15) << left << "Vardas " << setw(23) << left << "Galutinis (Vid.)" << setw(15) << left << "Galutinis (Med.)" << endl;
            cout << "----------------------------------------------------------------" <<endl;
            for(auto& past : Grupe)
            {   
                cout << setw(15) << left << past.pav << " | " << setw(10) << left << past.var << " | " ;
                cout << setw(15) << fixed << setprecision(2) << past.gal << " | " << setw(10) << past.med << endl;
            }
            tinkamas = true;
        }
        else{
            cin.clear();
            cin.ignore(1000, '\n');
            cout << "Ivedete netinkama pasirinkima. Pabandykite dar karta." << endl;
        }
    }
}
